Index: src/scene/LevelScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package scene;\n\nimport collision.CollisionHandler3;\nimport game.*;\nimport geometry.Line3;\nimport geometry.Sphere;\nimport graphics.EmptyFbo;\nimport graphics.FrameBufferObject;\nimport graphics.GameObjectMesh;\nimport graphics.ShaderProgram;\nimport org.joml.Vector3d;\nimport org.joml.Vector3f;\nimport org.lwjgl.system.MemoryUtil;\nimport math.MathUtil;\nimport util.Deletable;\n\nimport java.nio.FloatBuffer;\nimport java.util.ArrayList;\n\nimport static mesh.MeshGeometry.*;\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class LevelScene extends Scene {\n    private Level level;\n\n    private final GameObjectMesh floorMesh;\n    private final GameObjectMesh holeMesh;\n    private final GameObjectMesh wallXMesh;\n    private final GameObjectMesh wallYMesh;\n    private final GameObjectMesh ballMesh;\n    private final GameObjectMesh[] gameObjectMeshes;\n\n    private final ShaderProgram colorNormalsInstanced;\n    private final ShaderProgram outlineInstanced;\n    private final ShaderProgram sobelFilterInstanced;\n    private final EmptyFbo edgeSourceFbo;\n    private final Vector3d rotation;\n\n    private final ArrayList<Box> floorTiles;\n    private final ArrayList<HoleBox> holeTiles;\n    private final ArrayList<Box> wallXTiles;\n    private final ArrayList<Box> wallYTiles;\n    private final ArrayList<Ball> balls;\n    private final ArrayList<? extends GameObject>[] gameObjects;\n    private final CollisionHandler3 collisionHandler;\n    private long timer;\n    private final double floorTileHeight = 0.5;\n    private final double wallHeight = 0.75;\n\n    private final Vector3f tileColor = new Vector3f(238f/255, 240f/255, 242f/255);\n    private final Vector3f bgColor = new Vector3f(94f/255, 67f/255, 82f/255);\n    private final Vector3f red = new Vector3f(255f/255, 91f/255, 91f/255);\n    private final Vector3f blue = new Vector3f(136f/255, 132f/255, 255f/255);\n    private final Vector3f green = new Vector3f(106f/255, 181f/255, 71f/255);\n    public LevelScene(int windowWidth, int windowHeight) {\n        super();\n        floorMesh = rectangularPrismMesh(\n                new Vector3f(0, 0, 0),\n                new Vector3f(1, 1, (float)floorTileHeight),\n                new Vector3f(0f, 0f, 0f)\n        );\n        holeMesh = holeTileMesh(\n                new Vector3f(0f, 0f, 0f),\n                new Vector3f(1, 0, 0),\n                20,\n                0.4\n        );\n        wallXMesh = rectangularPrismMesh(\n                new Vector3f(0, 0, 0),\n                new Vector3f(0.1f, 1.1f, (float)(floorTileHeight+wallHeight)),\n                new Vector3f(0f, 0f, 0f)\n        );\n        wallYMesh = rectangularPrismMesh(\n                new Vector3f(0, -0, 0),\n                new Vector3f(1.1f, 0.1f, (float)(floorTileHeight+wallHeight)),\n                new Vector3f(0f, 0f, 0f)\n        );\n        ballMesh = generateGeodesicPolyhedronMesh(3, new Vector3f(0f, 0f, 0f));\n        gameObjectMeshes = new GameObjectMesh[] {floorMesh, holeMesh, wallXMesh, wallYMesh, ballMesh};\n\n        colorNormalsInstanced = ShaderProgram.fromFile(\"color_normals_instanced.glsl\");\n        outlineInstanced = ShaderProgram.fromFile(\"outline_instanced.glsl\");\n        sobelFilterInstanced = ShaderProgram.fromFile(\"sobel_filter_instanced.glsl\");\n\n        rotation = new Vector3d();\n\n        floorTiles = new ArrayList<>();\n        holeTiles = new ArrayList<>();\n        wallXTiles = new ArrayList<>();\n        wallYTiles = new ArrayList<>();\n        balls = new ArrayList<>();\n        gameObjects = new ArrayList[] {floorTiles, holeTiles, wallXTiles, wallYTiles, balls};\n\n        camera.position.z = 6;\n\n        edgeSourceFbo = new EmptyFbo(windowWidth, windowHeight);\n        handleWindowResize(windowWidth, windowHeight);\n\n        collisionHandler = new CollisionHandler3();\n    }\n    @Override\n    public void handleWindowResize(int width, int height) {\n        super.handleWindowResize(width, height);\n        edgeSourceFbo.resize(width, height);\n    }\n    public void update(InputState input) {\n//        timer++;\n        rotation.x = (MathUtil.cutMaxMin(input.getMousePosition().y, 0, 1)-0.5) * Math.PI/3;\n        rotation.y = (MathUtil.cutMaxMin(input.getMousePosition().x, 0, 1)-0.5) * Math.PI/3;\n        if (rotation.length() > Math.PI/6) {\n            rotation.normalize(Math.PI/6);\n        }\n\n//        if (timer == 5) {\n//            balls.get(0).geometry.position.set(-0.2, 2.1, 0.35);\n//            balls.get(1).geometry.position.set(-1.2, 1.1, 0.35);\n//            balls.get(1).velocity.set(0.04, 0.04, 0);\n//        }\n\n        int i = 1;\n        for (Ball ball : balls) {\n//            System.out.printf(\"---- ball %d\\n\", i++);\n            if (ball.geometry.position.z <= -1) {\n                ball.geometry.position.set(1.5, -0.5, 0.5);\n                ball.velocity.set(0,0,0);\n            }\n\n            ball.velocity.x += Math.sin(rotation.y * 0.0004);\n            ball.velocity.x = MathUtil.cutMaxMin(ball.velocity.x, -0.04f, 0.04f);\n            ball.velocity.y += -Math.sin(rotation.x * 0.0004);\n            ball.velocity.y = MathUtil.cutMaxMin(ball.velocity.y, -0.04f, 0.04f);\n\n            ball.velocity.z -= 0.0004;\n\n            if (ball.velocity.length() > 0.04f) {\n                ball.velocity.normalize(0.04f);\n            }\n\n            collisionHandler.reset();\n            collisionHandler.setBall(ball);\n            for (Box box : wallXTiles) {\n                collisionHandler.addFloorBox(box);\n            }\n            for (Box box : wallYTiles) {\n                collisionHandler.addFloorBox(box);\n            }\n            for (Box box : floorTiles) {\n                collisionHandler.addFloorBox(box);\n            }\n            for (HoleBox box : holeTiles) {\n                collisionHandler.addHoleBox(box);\n            }\n            for (Ball collisionBall : balls) {\n                if (ball == collisionBall) continue;\n                collisionHandler.addBallCollision(collisionBall);\n            }\n            collisionHandler.processCollisions();\n\n            ball.update();\n        }\n    }\n\n    private void renderGameObjects(ShaderProgram shader) {\n        for (int i = 0; i < gameObjects.length; i++) {\n            setViewMatrices(shader, gameObjects[i]);\n            gameObjectMeshes[i].renderInstanced(gameObjects[i].size());\n        }\n    }\n    private void renderGameObjectsColor(ShaderProgram shader) {\n        for (int i = 0; i < gameObjects.length; i++) {\n            setViewMatrices(shader, gameObjects[i]);\n            setColors(shader, gameObjects[i]);\n            gameObjectMeshes[i].renderInstanced(gameObjects[i].size());\n        }\n    }\n    private void setViewMatrices(ShaderProgram shader, ArrayList<? extends GameObject> objects) {\n        FloatBuffer buffer = MemoryUtil.memAllocFloat(16*objects.size());\n        for (int i = 0; i < objects.size(); i++) {\n            camera.getViewMatrix(objects.get(i).getWorldMatrix(rotation)).get(i*16, buffer);\n        }\n        shader.setUniformMatrix4fv(\"viewMatrices\", buffer);\n        MemoryUtil.memFree(buffer);\n    }\n    private void setColors(ShaderProgram shader, ArrayList<? extends GameObject> objects) {\n        FloatBuffer buffer = MemoryUtil.memAllocFloat(3*objects.size());\n        for (int i = 0; i < objects.size(); i++) {\n            objects.get(i).color1.get(i*3, buffer);\n        }\n        shader.setUniform3fv(\"color1\", buffer);\n        MemoryUtil.memFree(buffer);\n\n        buffer = MemoryUtil.memAllocFloat(3*objects.size());\n        for (int i = 0; i < objects.size(); i++) {\n            objects.get(i).color2.get(i*3, buffer);\n        }\n        shader.setUniform3fv(\"color2\", buffer);\n        MemoryUtil.memFree(buffer);\n    }\n    public void render() {\n        if (level == null) return;\n\n        glClearColor(bgColor.x, bgColor.y, bgColor.z, 1);\n//        glEnable(GL_STENCIL_TEST);\n//        glStencilOp(GL_KEEP, GL_KEEP, GL_REPLACE);\n//        glStencilMask(0xFF);\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);\n        glEnable(GL_CULL_FACE);\n\n//        glStencilFunc(GL_ALWAYS, 1, 0xFF);\n//        glStencilMask(0xFF);\n\n        edgeSourceFbo.bind();\n        glClearColor(0.0f, 0.0f, 0.0f, 0.0f);\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n\n        colorNormalsInstanced.bind();\n        colorNormalsInstanced.setUniform(\"projectionMatrix\", camera.getProjectionMatrix());\n\n        renderGameObjects(colorNormalsInstanced);\n\n        FrameBufferObject.unbind();\n        sobelFilterInstanced.bind();\n        sobelFilterInstanced.setUniform(\"normalTexture\", 0);\n        sobelFilterInstanced.setUniform(\"depthTexture\", 1);\n        sobelFilterInstanced.setUniform(\"projectionMatrix\", camera.getProjectionMatrix());\n\n        glActiveTexture(GL_TEXTURE0);\n        edgeSourceFbo.getColorTexture().bind();\n        glActiveTexture(GL_TEXTURE1);\n        edgeSourceFbo.getDepthTexture().bind();\n\n        renderGameObjectsColor(sobelFilterInstanced);\n\n\n//        glStencilFunc(GL_NOTEQUAL, 1, 0xFF);\n//        glStencilMask(0x00);\n\n//        outline.bind();\n//        outline.setUniform(\"projectionMatrix\", camera.getProjectionMatrix());\n//        outline.setUniform(\"viewMatrix\", camera.getViewMatrix(ball.getWorldMatrix(rotation)));\n//        outline.setUniform(\"expand\", 0.05f);\n//        ballMesh.render();\n\n//        outlineInstanced.bind();\n//        outlineInstanced.setUniform(\"projectionMatrix\", camera.getProjectionMatrix());\n//        outlineInstanced.setUniform(\"expand\", 0.03f);\n//\n//        setViewMatrices(outlineInstanced, floorTiles);\n//        floorMesh.renderInstanced(floorTiles.size());\n//\n//        setViewMatrices(outlineInstanced, wallXTiles);\n//        wallXMesh.renderInstanced(wallXTiles.size());\n//\n//        setViewMatrices(outlineInstanced, wallYTiles);\n//        wallYMesh.renderInstanced(wallYTiles.size());\n//\n//        outlineInstanced.unbind();\n//\n//        glDisable(GL_STENCIL_TEST);\n    }\n    public void loadLevel(Level level) {\n        this.level = level;\n\n        floorTiles.clear();\n        holeTiles.clear();\n        wallXTiles.clear();\n        wallYTiles.clear();\n        balls.clear();\n\n        for (int i = 0; i < level.getRows(); i++) {\n            for (int j = 0; j < level.getColumns(); j++) {\n                switch (level.getFloorState(i, j)) {\n                    case FLOOR -> {\n                        Box tile = new Box(new Line3(\n                                new Vector3d(level.getPosX(j), level.getPosY(i), -floorTileHeight),\n                                new Vector3d(1, 1, floorTileHeight)\n                        ));\n                        tile.color1.set(tileColor);\n                        tile.color2.set(tileColor);\n                        floorTiles.add(tile);\n                    }\n                    case GOAL1 -> {\n                        HoleBox tile = new HoleBox(new Line3(\n                                new Vector3d(level.getPosX(j), level.getPosY(i), -floorTileHeight),\n                                new Vector3d(1, 1, floorTileHeight)\n                        ), 0.4);\n                        tile.color1.set(tileColor);\n                        tile.color2.set(red);\n                        holeTiles.add(tile);\n                    }\n                    case GOAL2 -> {\n                        HoleBox tile = new HoleBox(new Line3(\n                                new Vector3d(level.getPosX(j), level.getPosY(i), -floorTileHeight),\n                                new Vector3d(1, 1, floorTileHeight)\n                        ), 0.4);\n                        tile.color1.set(tileColor);\n                        tile.color2.set(blue);\n                        holeTiles.add(tile);\n                    }\n                }\n            }\n            for (int j = 0; j < level.getColumns()+1; j++) {\n                if (level.getWallXState(i, j)) {\n                    Box tile = new Box(new Line3(\n                            new Vector3d(level.getPosX(j)-0.05, level.getPosY(i)-0.05, -floorTileHeight),\n                            new Vector3d(0.1, 1.1, floorTileHeight+wallHeight)\n                    ));\n                    tile.color1.set(tileColor);\n                    tile.color2.set(tileColor);\n                    wallXTiles.add(tile);\n                }\n            }\n        }\n        for (int i = 0; i < level.getRows()+1; i++) {\n            for (int j = 0; j < level.getColumns(); j++) {\n                if (level.getWallYState(i, j)) {\n                    Box tile = new Box(new Line3(\n                            new Vector3d(level.getPosX(j)-0.05, level.getPosY(i)-0.05, -floorTileHeight),\n                            new Vector3d(1.1, 0.1, floorTileHeight+wallHeight)\n                    ));\n                    tile.color1.set(tileColor);\n                    tile.color2.set(tileColor);\n                    wallYTiles.add(tile);\n                }\n            }\n        }\n\n        Vector3f[] ballColors = new Vector3f[] { red, blue };\n        for (int i = 0; i < level.numberBalls(); i++) {\n            Ball ball = new Ball(\n                    new Sphere(new Vector3d(level.getBallPosX(i), level.getBallPosY(i), 0.5), 0.35)\n            );\n            ball.color1.set(ballColors[i]);\n            ball.color2.set(ballColors[i]);\n            balls.add(ball);\n        }\n    }\n    public void delete() {\n        for (Deletable obj : new Deletable[] {floorMesh, wallXMesh, wallYMesh, colorNormalsInstanced, outlineInstanced}) {\n            obj.delete();\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/scene/LevelScene.java b/src/scene/LevelScene.java
--- a/src/scene/LevelScene.java	(revision ea0339c7f8920c4e4e14f790d1d2e254ee2ad8e4)
+++ b/src/scene/LevelScene.java	(date 1686791085061)
@@ -125,16 +125,16 @@
                 ball.velocity.set(0,0,0);
             }
 
-            ball.velocity.x += Math.sin(rotation.y * 0.0004);
-            ball.velocity.x = MathUtil.cutMaxMin(ball.velocity.x, -0.04f, 0.04f);
-            ball.velocity.y += -Math.sin(rotation.x * 0.0004);
-            ball.velocity.y = MathUtil.cutMaxMin(ball.velocity.y, -0.04f, 0.04f);
+            ball.velocity.x += Math.sin(rotation.y * 0.00035);
+            ball.velocity.x = MathUtil.cutMaxMin(ball.velocity.x, -0.035f, 0.035f);
+            ball.velocity.y += -Math.sin(rotation.x * 0.00035);
+            ball.velocity.y = MathUtil.cutMaxMin(ball.velocity.y, -0.035f, 0.035f);
 
             ball.velocity.z -= 0.0004;
 
-            if (ball.velocity.length() > 0.04f) {
-                ball.velocity.normalize(0.04f);
-            }
+//            if (ball.velocity.length() > 0.04f) {
+//                ball.velocity.normalize(0.04f);
+//            }
 
             collisionHandler.reset();
             collisionHandler.setBall(ball);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ArtifactsWorkspaceSettings\">\n    <artifacts-to-build>\n      <artifact name=\"Tilt:jar\" />\n    </artifacts-to-build>\n  </component>\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"4b145486-de3d-4307-a7d0-f513c11d03be\" name=\"Changes\" comment=\"Remove color from Mesh\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/assets/shaders/sobel_filter_instanced.glsl\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/assets/shaders/sobel_filter_instanced.glsl\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/game/Game.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/game/Game.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"GLSL Shader\" />\n        <option value=\"Interface\" />\n        <option value=\"Enum\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"RESET_MODE\" value=\"HARD\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2O12eKP1bPounGCH3aVifi2moZc\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\n    \"Downloaded.Files.Path.Enabled\": \"false\",\n    \"Repository.Attach.Annotations\": \"false\",\n    \"Repository.Attach.JavaDocs\": \"false\",\n    \"Repository.Attach.Sources\": \"false\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"git-widget-placeholder\": \"main\",\n    \"last_opened_file_path\": \"/home/potatoritos/BouncyBalls\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"project.structure.last.edited\": \"SDKs\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.2\",\n    \"settings.editor.selected.configurable\": \"preferences.editor\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/assets/levels\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/assets/levels\" />\n      <recent name=\"$PROJECT_DIR$/assets/shader\" />\n    </key>\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\n      <recent name=\"geometry\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"BouncyBalls\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"4b145486-de3d-4307-a7d0-f513c11d03be\" name=\"Changes\" comment=\"\" />\n      <created>1680713863523</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1680713863523</updated>\n      <workItem from=\"1680713864593\" duration=\"1051000\" />\n      <workItem from=\"1680785393173\" duration=\"17282000\" />\n      <workItem from=\"1680810439685\" duration=\"8802000\" />\n      <workItem from=\"1680885015007\" duration=\"1151000\" />\n      <workItem from=\"1680887521337\" duration=\"17424000\" />\n      <workItem from=\"1680906084832\" duration=\"12831000\" />\n      <workItem from=\"1680970810422\" duration=\"25939000\" />\n      <workItem from=\"1681047847623\" duration=\"13010000\" />\n      <workItem from=\"1681518189441\" duration=\"34000\" />\n      <workItem from=\"1682348248632\" duration=\"9881000\" />\n      <workItem from=\"1682359300018\" duration=\"32000\" />\n      <workItem from=\"1682359337234\" duration=\"34000\" />\n      <workItem from=\"1682359377282\" duration=\"25000\" />\n      <workItem from=\"1682359408503\" duration=\"3396000\" />\n      <workItem from=\"1682365045378\" duration=\"1835000\" />\n      <workItem from=\"1682425447670\" duration=\"117000\" />\n      <workItem from=\"1682425821321\" duration=\"19988000\" />\n      <workItem from=\"1682451342948\" duration=\"3578000\" />\n      <workItem from=\"1682455777486\" duration=\"1241000\" />\n      <workItem from=\"1682484829707\" duration=\"4148000\" />\n      <workItem from=\"1682527191182\" duration=\"8427000\" />\n      <workItem from=\"1682537046479\" duration=\"3514000\" />\n      <workItem from=\"1682599908812\" duration=\"11555000\" />\n      <workItem from=\"1682722729308\" duration=\"259000\" />\n      <workItem from=\"1682944139848\" duration=\"7026000\" />\n      <workItem from=\"1683136520794\" duration=\"3894000\" />\n      <workItem from=\"1683204229902\" duration=\"18591000\" />\n      <workItem from=\"1683232707955\" duration=\"1021000\" />\n      <workItem from=\"1683236107324\" duration=\"12584000\" />\n      <workItem from=\"1683290319529\" duration=\"30400000\" />\n      <workItem from=\"1683379723339\" duration=\"6690000\" />\n      <workItem from=\"1683556018040\" duration=\"1177000\" />\n      <workItem from=\"1683561553420\" duration=\"4574000\" />\n      <workItem from=\"1683567831648\" duration=\"2092000\" />\n      <workItem from=\"1683635973008\" duration=\"13802000\" />\n      <workItem from=\"1683667709649\" duration=\"1968000\" />\n      <workItem from=\"1683721807596\" duration=\"19740000\" />\n      <workItem from=\"1683747405445\" duration=\"20317000\" />\n      <workItem from=\"1683811784533\" duration=\"16623000\" />\n      <workItem from=\"1683839748506\" duration=\"4314000\" />\n      <workItem from=\"1683894709735\" duration=\"1646000\" />\n      <workItem from=\"1683908798861\" duration=\"7525000\" />\n      <workItem from=\"1683922355205\" duration=\"5333000\" />\n      <workItem from=\"1683933258658\" duration=\"5667000\" />\n      <workItem from=\"1683938934313\" duration=\"1167000\" />\n      <workItem from=\"1683977625865\" duration=\"1617000\" />\n      <workItem from=\"1684159284082\" duration=\"51000\" />\n      <workItem from=\"1684159341158\" duration=\"8978000\" />\n      <workItem from=\"1684240377147\" duration=\"1503000\" />\n      <workItem from=\"1684428713573\" duration=\"23000\" />\n      <workItem from=\"1684447042993\" duration=\"864000\" />\n      <workItem from=\"1684690378557\" duration=\"110000\" />\n      <workItem from=\"1684690492740\" duration=\"661000\" />\n      <workItem from=\"1685094796946\" duration=\"90000\" />\n      <workItem from=\"1685098570339\" duration=\"20000\" />\n      <workItem from=\"1685366418603\" duration=\"471000\" />\n      <workItem from=\"1685367130684\" duration=\"545000\" />\n      <workItem from=\"1685382419111\" duration=\"48000\" />\n      <workItem from=\"1685382866253\" duration=\"63000\" />\n      <workItem from=\"1685382935415\" duration=\"94000\" />\n      <workItem from=\"1685383035548\" duration=\"3804000\" />\n      <workItem from=\"1685547534166\" duration=\"9480000\" />\n      <workItem from=\"1685622396446\" duration=\"4494000\" />\n      <workItem from=\"1685627164041\" duration=\"13082000\" />\n      <workItem from=\"1685643602792\" duration=\"2463000\" />\n      <workItem from=\"1685648119215\" duration=\"7199000\" />\n      <workItem from=\"1685893743597\" duration=\"613000\" />\n      <workItem from=\"1685969647921\" duration=\"2357000\" />\n      <workItem from=\"1686122915748\" duration=\"8994000\" />\n      <workItem from=\"1686227849224\" duration=\"2633000\" />\n      <workItem from=\"1686573393978\" duration=\"4947000\" />\n      <workItem from=\"1686580481230\" duration=\"15148000\" />\n      <workItem from=\"1686608537403\" duration=\"26455000\" />\n      <workItem from=\"1686669314774\" duration=\"10000\" />\n      <workItem from=\"1686673852895\" duration=\"7715000\" />\n      <workItem from=\"1686686941668\" duration=\"11359000\" />\n      <workItem from=\"1686762325246\" duration=\"23509000\" />\n      <workItem from=\"1686787112391\" duration=\"3250000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"Remove color from Mesh\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Remove color from Mesh\" />\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ea0339c7f8920c4e4e14f790d1d2e254ee2ad8e4)
+++ b/.idea/workspace.xml	(date 1686791008040)
@@ -11,8 +11,7 @@
   <component name="ChangeListManager">
     <list default="true" id="4b145486-de3d-4307-a7d0-f513c11d03be" name="Changes" comment="Remove color from Mesh">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/shaders/sobel_filter_instanced.glsl" beforeDir="false" afterPath="$PROJECT_DIR$/assets/shaders/sobel_filter_instanced.glsl" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/game/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/game/Game.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/scene/LevelScene.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/scene/LevelScene.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -30,6 +29,11 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="4940e49914608d80a45ec3b887ad5b417d4f2b8d" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
     <option name="RESET_MODE" value="HARD" />
   </component>
@@ -44,31 +48,31 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "Downloaded.Files.Path.Enabled": "false",
-    "Repository.Attach.Annotations": "false",
-    "Repository.Attach.JavaDocs": "false",
-    "Repository.Attach.Sources": "false",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "git-widget-placeholder": "main",
-    "last_opened_file_path": "/home/potatoritos/BouncyBalls",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "SDKs",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "settings.editor.selected.configurable": "preferences.editor",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/home/potatoritos/BouncyBalls&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.editor&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$/assets/levels" />
